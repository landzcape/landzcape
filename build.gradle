allprojects {
    buildscript {
        ext.kotlin_version = '1.3.21'
        repositories {
            mavenCentral()
            maven { url "https://plugins.gradle.org/m2/" }
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
            classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
            classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
        }
    }

    apply plugin: 'java'
    group = 'io.landzcape'
    setProjectVersion()

    test {
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }
    }

    defineProperty('ossrhUsername', 'OSSRH_USERNAME')
    defineProperty('ossrhPassword', 'OSSRH_PASSWORD')
    defineProperty('signing.keyId', 'SIGNING_KEY_ID')
    defineProperty('signing.secretKeyRingFile', 'SIGNING_KEY_FILE')
    defineProperty('signing.password', 'SIGNING_PASSWORD')

}

def defineProperty(propertyName, environmentVariableName) {
    if(project.hasProperty(propertyName)) {
        ext[propertyName] = project.properties[propertyName]
    } else if(System.getenv(environmentVariableName) != null) {
        ext[propertyName] = System.getenv(environmentVariableName)
    } else {
        throw new RuntimeException("Property ${propertyName} or variable ${environmentVariableName} is not set.")
    }
}

def setProjectVersion() {
    if(project.hasProperty('travisTag')) {
        project.version project.properties['travisTag']
    }
    project.version '0.0.1-SNAPSHOT'
}
